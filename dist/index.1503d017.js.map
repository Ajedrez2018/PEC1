{"mappings":"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","sources":["node_modules/perfect-scrollbar/src/lib/css.js","node_modules/perfect-scrollbar/src/lib/dom.js","node_modules/perfect-scrollbar/src/lib/class-names.js","node_modules/perfect-scrollbar/src/lib/event-manager.js","node_modules/perfect-scrollbar/src/process-scroll-diff.js","node_modules/perfect-scrollbar/src/lib/util.js","node_modules/perfect-scrollbar/src/update-geometry.js","node_modules/perfect-scrollbar/src/handlers/drag-thumb.js","node_modules/perfect-scrollbar/src/index.js","node_modules/perfect-scrollbar/src/handlers/click-rail.js","node_modules/perfect-scrollbar/src/handlers/keyboard.js","node_modules/perfect-scrollbar/src/handlers/mouse-wheel.js","node_modules/perfect-scrollbar/src/handlers/touch.js"],"sourcesContent":["export function get(element) {\n  return getComputedStyle(element);\n}\n\nexport function set(element, obj) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n","export function div(className) {\n  const div = document.createElement('div');\n  div.className = className;\n  return div;\n}\n\nconst elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nexport function matches(element, query) {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\nexport function remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nexport function queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, child =>\n    matches(child, selector)\n  );\n}\n","const cls = {\n  main: 'ps',\n  rtl: 'ps__rtl',\n  element: {\n    thumb: x => `ps__thumb-${x}`,\n    rail: x => `ps__rail-${x}`,\n    consuming: 'ps__child--consume',\n  },\n  state: {\n    focus: 'ps--focus',\n    clicking: 'ps--clicking',\n    active: x => `ps--active-${x}`,\n    scrolling: x => `ps--scrolling-${x}`,\n  },\n};\n\nexport default cls;\n\n/*\n * Helper methods\n */\nconst scrollingClassTimeout = { x: null, y: null };\n\nexport function addScrollingClass(i, x) {\n  const classList = i.element.classList;\n  const className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nexport function removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(\n    () => i.isAlive && i.element.classList.remove(cls.state.scrolling(x)),\n    i.settings.scrollingThreshold\n  );\n}\n\nexport function setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n","class EventElement {\n  constructor(element) {\n    this.element = element;\n    this.handlers = {};\n  }\n\n  bind(eventName, handler) {\n    if (typeof this.handlers[eventName] === 'undefined') {\n      this.handlers[eventName] = [];\n    }\n    this.handlers[eventName].push(handler);\n    this.element.addEventListener(eventName, handler, false);\n  }\n\n  unbind(eventName, target) {\n    this.handlers[eventName] = this.handlers[eventName].filter(handler => {\n      if (target && handler !== target) {\n        return true;\n      }\n      this.element.removeEventListener(eventName, handler, false);\n      return false;\n    });\n  }\n\n  unbindAll() {\n    for (const name in this.handlers) {\n      this.unbind(name);\n    }\n  }\n\n  get isEmpty() {\n    return Object.keys(this.handlers).every(\n      key => this.handlers[key].length === 0\n    );\n  }\n}\n\nexport default class EventManager {\n  constructor() {\n    this.eventElements = [];\n  }\n\n  eventElement(element) {\n    let ee = this.eventElements.filter(ee => ee.element === element)[0];\n    if (!ee) {\n      ee = new EventElement(element);\n      this.eventElements.push(ee);\n    }\n    return ee;\n  }\n\n  bind(element, eventName, handler) {\n    this.eventElement(element).bind(eventName, handler);\n  }\n\n  unbind(element, eventName, handler) {\n    const ee = this.eventElement(element);\n    ee.unbind(eventName, handler);\n\n    if (ee.isEmpty) {\n      // remove\n      this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n    }\n  }\n\n  unbindAll() {\n    this.eventElements.forEach(e => e.unbindAll());\n    this.eventElements = [];\n  }\n\n  once(element, eventName, handler) {\n    const ee = this.eventElement(element);\n    const onceHandler = evt => {\n      ee.unbind(eventName, onceHandler);\n      handler(evt);\n    };\n    ee.bind(eventName, onceHandler);\n  }\n}\n","import { setScrollingClassInstantly } from './lib/class-names';\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === 'function') {\n    return new CustomEvent(name);\n  } else {\n    const evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nexport default function(\n  i,\n  axis,\n  diff,\n  useScrollingClass = true,\n  forceFireReachEvent = false\n) {\n  let fields;\n  if (axis === 'top') {\n    fields = [\n      'contentHeight',\n      'containerHeight',\n      'scrollTop',\n      'y',\n      'up',\n      'down',\n    ];\n  } else if (axis === 'left') {\n    fields = [\n      'contentWidth',\n      'containerWidth',\n      'scrollLeft',\n      'x',\n      'left',\n      'right',\n    ];\n  } else {\n    throw new Error('A proper axis should be provided');\n  }\n\n  processScrollDiff(i, diff, fields, useScrollingClass, forceFireReachEvent);\n}\n\nfunction processScrollDiff(\n  i,\n  diff,\n  [contentHeight, containerHeight, scrollTop, y, up, down],\n  useScrollingClass = true,\n  forceFireReachEvent = false\n) {\n  const element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] < 1) {\n    i.reach[y] = 'start';\n  }\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\n    i.reach[y] = 'end';\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent(`ps-scroll-${y}`));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent(`ps-scroll-${up}`));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent(`ps-scroll-${down}`));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent(`ps-${y}-reach-${i.reach[y]}`));\n  }\n}\n","import * as CSS from './css';\nimport * as DOM from './dom';\n\nexport function toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nexport function isEditable(el) {\n  return (\n    DOM.matches(el, 'input,[contenteditable]') ||\n    DOM.matches(el, 'select,[contenteditable]') ||\n    DOM.matches(el, 'textarea,[contenteditable]') ||\n    DOM.matches(el, 'button,[contenteditable]')\n  );\n}\n\nexport function outerWidth(element) {\n  const styles = CSS.get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nexport const env = {\n  isWebKit:\n    typeof document !== 'undefined' &&\n    'WebkitAppearance' in document.documentElement.style,\n  supportsTouch:\n    typeof window !== 'undefined' &&\n    ('ontouchstart' in window ||\n      ('maxTouchPoints' in window.navigator &&\n        window.navigator.maxTouchPoints > 0) ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== 'undefined' &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n","import * as CSS from './lib/css';\nimport * as DOM from './lib/dom';\nimport cls from './lib/class-names';\nimport { toInt } from './lib/util';\n\nexport default function(i) {\n  const element = i.element;\n  const roundedScrollTop = Math.floor(element.scrollTop);\n  const rect = element.getBoundingClientRect();\n\n  i.containerWidth = Math.round(rect.width);\n  i.containerHeight = Math.round(rect.height);\n\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    DOM.queryChildren(element, cls.element.rail('x')).forEach(el =>\n      DOM.remove(el)\n    );\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    DOM.queryChildren(element, cls.element.rail('y')).forEach(el =>\n      DOM.remove(el)\n    );\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      ((i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth)) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active('x'));\n  } else {\n    element.classList.remove(cls.state.active('x'));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active('y'));\n  } else {\n    element.classList.remove(cls.state.active('y'));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n}\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  const xRailOffset = { width: i.railXWidth };\n  const roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  CSS.set(i.scrollbarXRail, xRailOffset);\n\n  const yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth -\n        9;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  CSS.set(i.scrollbarYRail, yRailOffset);\n\n  CSS.set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  CSS.set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n","import * as CSS from '../lib/css';\nimport * as DOM from '../lib/dom';\nimport cls, {\n  addScrollingClass,\n  removeScrollingClass,\n} from '../lib/class-names';\nimport updateGeometry from '../update-geometry';\nimport { toInt } from '../lib/util';\n\nexport default function(i) {\n  bindMouseScrollHandler(i, [\n    'containerWidth',\n    'contentWidth',\n    'pageX',\n    'railXWidth',\n    'scrollbarX',\n    'scrollbarXWidth',\n    'scrollLeft',\n    'x',\n    'scrollbarXRail',\n  ]);\n  bindMouseScrollHandler(i, [\n    'containerHeight',\n    'contentHeight',\n    'pageY',\n    'railYHeight',\n    'scrollbarY',\n    'scrollbarYHeight',\n    'scrollTop',\n    'y',\n    'scrollbarYRail',\n  ]);\n}\n\nfunction bindMouseScrollHandler(\n  i,\n  [\n    containerHeight,\n    contentHeight,\n    pageY,\n    railYHeight,\n    scrollbarY,\n    scrollbarYHeight,\n    scrollTop,\n    y,\n    scrollbarYRail,\n  ]\n) {\n  const element = i.element;\n\n  let startingScrollTop = null;\n  let startingMousePageY = null;\n  let scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    if (e.touches && e.touches[0]) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    if (e.type.startsWith('touch') && e.changedTouches.length > 1) {\n      e.preventDefault();\n    }\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  }\n\n  function bindMoves(e, touchMode) {\n    startingScrollTop = element[scrollTop];\n    if (touchMode && e.touches) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n    if (!touchMode) {\n      i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n      i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n      e.preventDefault();\n    } else {\n      i.event.bind(i.ownerDocument, 'touchmove', mouseMoveHandler);\n    }\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n  }\n\n  i.event.bind(i[scrollbarY], 'mousedown', e => {\n    bindMoves(e);\n  });\n  i.event.bind(i[scrollbarY], 'touchstart', e => {\n    bindMoves(e, true);\n  });\n}\n","import * as CSS from './lib/css';\nimport * as DOM from './lib/dom';\nimport cls from './lib/class-names';\nimport EventManager from './lib/event-manager';\nimport processScrollDiff from './process-scroll-diff';\nimport updateGeometry from './update-geometry';\nimport { toInt, outerWidth } from './lib/util';\n\nimport clickRail from './handlers/click-rail';\nimport dragThumb from './handlers/drag-thumb';\nimport keyboard from './handlers/keyboard';\nimport wheel from './handlers/mouse-wheel';\nimport touch from './handlers/touch';\n\nconst defaultSettings = () => ({\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollingThreshold: 1000,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipeEasing: true,\n  useBothWheelAxes: false,\n  wheelPropagation: true,\n  wheelSpeed: 1,\n});\n\nconst handlers = {\n  'click-rail': clickRail,\n  'drag-thumb': dragThumb,\n  keyboard,\n  wheel,\n  touch,\n};\n\nexport default class PerfectScrollbar {\n  constructor(element, userSettings = {}) {\n    if (typeof element === 'string') {\n      element = document.querySelector(element);\n    }\n\n    if (!element || !element.nodeName) {\n      throw new Error('no element is specified to initialize PerfectScrollbar');\n    }\n\n    this.element = element;\n\n    element.classList.add(cls.main);\n\n    this.settings = defaultSettings();\n    for (const key in userSettings) {\n      this.settings[key] = userSettings[key];\n    }\n\n    this.containerWidth = null;\n    this.containerHeight = null;\n    this.contentWidth = null;\n    this.contentHeight = null;\n\n    const focus = () => element.classList.add(cls.state.focus);\n    const blur = () => element.classList.remove(cls.state.focus);\n\n    this.isRtl = CSS.get(element).direction === 'rtl';\n    if (this.isRtl === true) {\n      element.classList.add(cls.rtl);\n    }\n    this.isNegativeScroll = (() => {\n      const originalScrollLeft = element.scrollLeft;\n      let result = null;\n      element.scrollLeft = -1;\n      result = element.scrollLeft < 0;\n      element.scrollLeft = originalScrollLeft;\n      return result;\n    })();\n    this.negativeScrollAdjustment = this.isNegativeScroll\n      ? element.scrollWidth - element.clientWidth\n      : 0;\n    this.event = new EventManager();\n    this.ownerDocument = element.ownerDocument || document;\n\n    this.scrollbarXRail = DOM.div(cls.element.rail('x'));\n    element.appendChild(this.scrollbarXRail);\n    this.scrollbarX = DOM.div(cls.element.thumb('x'));\n    this.scrollbarXRail.appendChild(this.scrollbarX);\n    this.scrollbarX.setAttribute('tabindex', 0);\n    this.event.bind(this.scrollbarX, 'focus', focus);\n    this.event.bind(this.scrollbarX, 'blur', blur);\n    this.scrollbarXActive = null;\n    this.scrollbarXWidth = null;\n    this.scrollbarXLeft = null;\n    const railXStyle = CSS.get(this.scrollbarXRail);\n    this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n    if (isNaN(this.scrollbarXBottom)) {\n      this.isScrollbarXUsingBottom = false;\n      this.scrollbarXTop = toInt(railXStyle.top);\n    } else {\n      this.isScrollbarXUsingBottom = true;\n    }\n    this.railBorderXWidth =\n      toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n    // Set rail to display:block to calculate margins\n    CSS.set(this.scrollbarXRail, { display: 'block' });\n    this.railXMarginWidth =\n      toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n    CSS.set(this.scrollbarXRail, { display: '' });\n    this.railXWidth = null;\n    this.railXRatio = null;\n\n    this.scrollbarYRail = DOM.div(cls.element.rail('y'));\n    element.appendChild(this.scrollbarYRail);\n    this.scrollbarY = DOM.div(cls.element.thumb('y'));\n    this.scrollbarYRail.appendChild(this.scrollbarY);\n    this.scrollbarY.setAttribute('tabindex', 0);\n    this.event.bind(this.scrollbarY, 'focus', focus);\n    this.event.bind(this.scrollbarY, 'blur', blur);\n    this.scrollbarYActive = null;\n    this.scrollbarYHeight = null;\n    this.scrollbarYTop = null;\n    const railYStyle = CSS.get(this.scrollbarYRail);\n    this.scrollbarYRight = parseInt(railYStyle.right, 10);\n    if (isNaN(this.scrollbarYRight)) {\n      this.isScrollbarYUsingRight = false;\n      this.scrollbarYLeft = toInt(railYStyle.left);\n    } else {\n      this.isScrollbarYUsingRight = true;\n    }\n    this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n    this.railBorderYWidth =\n      toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n    CSS.set(this.scrollbarYRail, { display: 'block' });\n    this.railYMarginHeight =\n      toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n    CSS.set(this.scrollbarYRail, { display: '' });\n    this.railYHeight = null;\n    this.railYRatio = null;\n\n    this.reach = {\n      x:\n        element.scrollLeft <= 0\n          ? 'start'\n          : element.scrollLeft >= this.contentWidth - this.containerWidth\n          ? 'end'\n          : null,\n      y:\n        element.scrollTop <= 0\n          ? 'start'\n          : element.scrollTop >= this.contentHeight - this.containerHeight\n          ? 'end'\n          : null,\n    };\n\n    this.isAlive = true;\n\n    this.settings.handlers.forEach(handlerName => handlers[handlerName](this));\n\n    this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n    this.lastScrollLeft = element.scrollLeft; // for onScroll only\n    this.event.bind(this.element, 'scroll', e => this.onScroll(e));\n    updateGeometry(this);\n  }\n\n  update() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    // Recalcuate negative scrollLeft adjustment\n    this.negativeScrollAdjustment = this.isNegativeScroll\n      ? this.element.scrollWidth - this.element.clientWidth\n      : 0;\n\n    // Recalculate rail margins\n    CSS.set(this.scrollbarXRail, { display: 'block' });\n    CSS.set(this.scrollbarYRail, { display: 'block' });\n    this.railXMarginWidth =\n      toInt(CSS.get(this.scrollbarXRail).marginLeft) +\n      toInt(CSS.get(this.scrollbarXRail).marginRight);\n    this.railYMarginHeight =\n      toInt(CSS.get(this.scrollbarYRail).marginTop) +\n      toInt(CSS.get(this.scrollbarYRail).marginBottom);\n\n    // Hide scrollbars not to affect scrollWidth and scrollHeight\n    CSS.set(this.scrollbarXRail, { display: 'none' });\n    CSS.set(this.scrollbarYRail, { display: 'none' });\n\n    updateGeometry(this);\n\n    processScrollDiff(this, 'top', 0, false, true);\n    processScrollDiff(this, 'left', 0, false, true);\n\n    CSS.set(this.scrollbarXRail, { display: '' });\n    CSS.set(this.scrollbarYRail, { display: '' });\n  }\n\n  onScroll(e) {\n    if (!this.isAlive) {\n      return;\n    }\n\n    updateGeometry(this);\n    processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\n    processScrollDiff(\n      this,\n      'left',\n      this.element.scrollLeft - this.lastScrollLeft\n    );\n\n    this.lastScrollTop = Math.floor(this.element.scrollTop);\n    this.lastScrollLeft = this.element.scrollLeft;\n  }\n\n  destroy() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    this.event.unbindAll();\n    DOM.remove(this.scrollbarX);\n    DOM.remove(this.scrollbarY);\n    DOM.remove(this.scrollbarXRail);\n    DOM.remove(this.scrollbarYRail);\n    this.removePsClasses();\n\n    // unset elements\n    this.element = null;\n    this.scrollbarX = null;\n    this.scrollbarY = null;\n    this.scrollbarXRail = null;\n    this.scrollbarYRail = null;\n\n    this.isAlive = false;\n  }\n\n  removePsClasses() {\n    this.element.className = this.element.className\n      .split(' ')\n      .filter(name => !name.match(/^ps([-_].+|)$/))\n      .join(' ');\n  }\n}\n","import updateGeometry from '../update-geometry';\n\nexport default function(i) {\n  const element = i.element;\n\n  i.event.bind(i.scrollbarY, 'mousedown', e => e.stopPropagation());\n  i.event.bind(i.scrollbarYRail, 'mousedown', e => {\n    const positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    const direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'mousedown', e => e.stopPropagation());\n  i.event.bind(i.scrollbarXRail, 'mousedown', e => {\n    const positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    const direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n}\n","import * as DOM from '../lib/dom';\nimport updateGeometry from '../update-geometry';\nimport { isEditable } from '../lib/util';\n\nexport default function(i) {\n  const element = i.element;\n\n  const elementHovered = () => DOM.matches(element, ':hover');\n  const scrollbarFocused = () =>\n    DOM.matches(i.scrollbarX, ':focus') || DOM.matches(i.scrollbarY, ':focus');\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    const scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    const scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', e => {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    let activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    let deltaX = 0;\n    let deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n}\n","import * as CSS from '../lib/css';\nimport cls from '../lib/class-names';\nimport updateGeometry from '../update-geometry';\nimport { env } from '../lib/util';\n\nexport default function(i) {\n  const element = i.element;\n\n  let shouldPrevent = false;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    const roundedScrollTop = Math.floor(element.scrollTop);\n    const isTop = element.scrollTop === 0;\n    const isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    const isLeft = element.scrollLeft === 0;\n    const isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    let hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    let deltaX = e.deltaX;\n    let deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\n      // OS X Safari\n      deltaX = (-1 * e.wheelDeltaX) / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector('select:focus')) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    let cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      const style = CSS.get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        const maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        const maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    const [deltaX, deltaY] = getDeltaFromEvent(e);\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    let shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== 'undefined') {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== 'undefined') {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n}\n","import updateGeometry from '../update-geometry';\nimport cls from '../lib/class-names';\nimport * as CSS from '../lib/css';\nimport { env } from '../lib/util';\n\nexport default function(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  const element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    const scrollTop = Math.floor(element.scrollTop);\n    const scrollLeft = element.scrollLeft;\n    const magnitudeX = Math.abs(deltaX);\n    const magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\n        (deltaY > 0 && scrollTop === 0)\n      ) {\n        // set prevent for mobile Chrome refresh\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\n        (deltaX > 0 && scrollLeft === 0)\n      ) {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  let startOffset = {};\n  let startTime = 0;\n  let speed = {};\n  let easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== 'mouse' &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    const touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    let cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      const style = CSS.get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        const maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        const maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      const touch = getTouch(e);\n\n      const currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      const differenceX = currentOffset.pageX - startOffset.pageX;\n      const differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      const currentTime = new Date().getTime();\n\n      const timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function() {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!i.element) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n}\n"],"names":["get","element","getComputedStyle","set","obj","const","key","let","val","style","div","className","document","createElement","elMatches","Element","prototype","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","query","Error","call","remove","parentNode","removeChild","queryChildren","selector","Array","filter","children","child","cls","thumb","x","rail","consuming","focus","clicking","active","scrolling","scrollingClassTimeout","addScrollingClass","i","classList","contains","clearTimeout","add","removeScrollingClass","setTimeout","isAlive","settings","scrollingThreshold","EventElement","this","handlers","isEmpty","configurable","bind","eventName","handler","push","addEventListener","unbind","target","this$1","removeEventListener","unbindAll","name","Object","keys","every","length","defineProperties","prototypeAccessors","EventManager","eventElements","createEvent","window","CustomEvent","evt","initCustomEvent","undefined","processScrollDiff","axis","diff","useScrollingClass","forceFireReachEvent","fields","ref","contentHeight","containerHeight","scrollTop","up","down","reach","y","dispatchEvent","setScrollingClassInstantly","toInt","parseInt","eventElement","ee","splice","indexOf","forEach","e","once","onceHandler","env","isWebKit","documentElement","supportsTouch","navigator","maxTouchPoints","DocumentTouch","supportsIePointer","msMaxTouchPoints","test","userAgent","updateGeometry","roundedScrollTop","Math","floor","rect","getBoundingClientRect","containerWidth","round","width","height","contentWidth","scrollWidth","DOM.queryChildren","scrollbarXRail","el","appendChild","scrollbarYRail","suppressScrollX","scrollXMarginOffset","scrollbarXActive","railXWidth","railXMarginWidth","railXRatio","scrollbarXWidth","getThumbSize","scrollbarXLeft","negativeScrollAdjustment","scrollLeft","suppressScrollY","scrollYMarginOffset","scrollbarYActive","railYHeight","railYMarginHeight","railYRatio","scrollbarYHeight","scrollbarYTop","xRailOffset","isRtl","left","isScrollbarXUsingBottom","bottom","scrollbarXBottom","top","scrollbarXTop","yRailOffset","right","scrollbarYRight","scrollbarYOuterWidth","scrollbarYLeft","CSS.set","scrollbarX","scrollbarY","railBorderYWidth","thumbSize","minScrollbarLength","max","maxScrollbarLength","min","bindMouseScrollHandler","pageY","startingScrollTop","scrollBy","mouseMoveHandler","touches","startingMousePageY","stopPropagation","type","startsWith","changedTouches","preventDefault","mouseUpHandler","ownerDocument","bindMoves","touchMode","event","direction","pageYOffset","pageX","pageXOffset","keyboard","DOM.matches","isDefaultPrevented","defaultPrevented","activeElement","tagName","contentDocument","shadowRoot","deltaX","deltaY","which","metaKey","altKey","shiftKey","wheelPropagation","shouldPreventDefault","wheel","mousewheelHandler","wheelDeltaX","wheelDeltaY","deltaMode","wheelDelta","getDeltaFromEvent","querySelector","cursor","CSS.get","overflowY","match","maxScrollTop","scrollHeight","clientHeight","overflowX","maxScrollLeft","clientWidth","shouldBeConsumedByChild","wheelSpeed","shouldPrevent","isTop","isBottom","offsetHeight","isLeft","abs","isRight","ctrlKey","onwheel","onmousewheel","touch","startOffset","startTime","speed","easingLoop","touchStart","touchMove","touchEnd","PointerEvent","MSPointerEvent","applyTouchMove","differenceX","differenceY","targetTouches","shouldHandle","pointerType","buttons","MSPOINTER_TYPE_MOUSE","getTouch","Date","getTime","clearInterval","currentOffset","currentTime","timeGap","magnitudeX","magnitudeY","swipeEasing","setInterval","isInitialized","PerfectScrollbar","userSettings","nodeName","useBothWheelAxes","result","originalScrollLeft","blur","isNegativeScroll","setAttribute","railXStyle","isNaN","railBorderXWidth","borderLeftWidth","borderRightWidth","display","marginLeft","marginRight","railYStyle","isScrollbarYUsingRight","styles","paddingLeft","paddingRight","outerWidth","borderTopWidth","borderBottomWidth","marginTop","marginBottom","handlerName","lastScrollTop","lastScrollLeft","onScroll","destroy","DOM.remove","removePsClasses","split"],"version":3,"file":"index.1503d017.js.map"}